trigger:
  - main

pool:
  name: JVS-NR-eastus2-pprdce01-ado-agentpool-01

variables:
  - group: dniprd

parameters:
  - name: methodName
    type: string
    default: "create_cloud_node"
    values:
      - "get_staging_client"
      - "create_cloud_node"
      - "assign_location"
      - "update_reachability"
      - "create_topology_vlan"
      - "delete_cloud_node"
  - name: accountId
    type: string
    default: ""
  - name: clientName
    type: string
    default: ""
  - name: cnContainerName
    type: string
    default: ""
  - name: cnBlobName
    type: string
    default: ""
  - name: locBlobName
    type: string
    default: ""
  - name: reachBlobName
    type: string
    default: ""
  - name: vlBlobName
    type: string
    default: ""
  - name: clientId
    type: string
    default: ""
  - name: cnId
    type: string
    default: ""
  - name: reservId
    type: string
    default: ""
  - name: topoId
    type: string
    default: ""

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.10.12'
      addToPath: true

  - script: |
      curl -x http://proxy.conexus.svc.local:3128 https://dni-api-stg.npnd.gw.att.com > linkid.txt
      cat linkid.txt
    displayName: 'Process LinkID'

  - script: |
      python -m pip install --upgrade pip
      pip install --force-reinstall --no-cache-dir cryptography
      pip install -r code/dni/requirements.txt
      export PATH="$HOME/.local/bin:$PATH"
    displayName: 'Reinstall and Install Python Dependencies'

  - script: |
      export PATH="$HOME/.local/bin:$PATH"
      echo "Listing contents of Agent.TempDirectory before copy:"
      ls $(Agent.TempDirectory)
      echo "Listing contents of code/dni directory after copy:"
      ls ./code/dni
      cd ./code/dni
      echo "Current working directory:"
      pwd

      /usr/bin/python3 dni_client_demo.py --method ${{ parameters.methodName }} \
                                         --account_id "${{ parameters.accountId }}" \
                                         --client_name "${{ parameters.clientName }}" \
                                         --cn_container_name "${{ parameters.cnContainerName }}" \
                                         --cn_blob_name "${{ parameters.cnBlobName }}" \
                                         --loc_blob_name "${{ parameters.locBlobName }}" \
                                         --reach_blob_name "${{ parameters.reachBlobName }}" \
                                         --vl_blob_name "${{ parameters.vlBlobName }}" \
                                         --client_id "${{ parameters.clientId }}" \
                                         --cn_id "${{ parameters.cnId }}" \
                                         --reserv_id "${{ parameters.reservId }}" \
                                         --topo_id "${{ parameters.topoId }}"
    displayName: 'Run Python Script with Selected Method'
