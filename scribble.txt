trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables: 
  terraformWorkingDirectory: '$(Build.SourcesDirectory)'
  backendStorageAccountName: 'stgacterraformstate'
  backendContainerName: 'terraform'
  backendKey: 'terraform.tfstate'
  backendResourceGroup: 'TFStateRg'
  serviceConnection: 'global-digital-euw-app-nova-dev'

steps:
- task: TerraformInstaller@0
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: 'latest'

- task: TerraformCLI@0
  displayName: 'Terraform Init'
  inputs:
    command: 'init'
    workingDirectory: '$(terraformWorkingDirectory)'
    backendType: 'azurerm'
    backendServiceArm: '$(serviceConnection)'
    backendAzureRmResourceGroupName: '$(backendResourceGroup)'
    backendAzureRmStorageAccountName: '$(backendStorageAccountName)'
    backendAzureRmContainerName: '$(backendContainerName)'
    backendAzureRmKey: '$(backendKey)'

- task: TerraformCLI@0
  displayName: 'Terraform Validate'
  inputs:
    command: 'validate'
    workingDirectory: '$(terraformWorkingDirectory)'

- task: TerraformCLI@0
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: '$(terraformWorkingDirectory)'
    environmentServiceName: '$(serviceConnection)'

- task: TerraformCLI@0
  displayName: 'Terraform Apply'
  inputs:
    command: 'apply'
    workingDirectory: '$(terraformWorkingDirectory)'
    environmentServiceName: '$(serviceConnection)'
    commandOptions: '-auto-approve'
