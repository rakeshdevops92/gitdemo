param (
    [Parameter(Mandatory = $true)]
    [string] $Region1,

    [Parameter(Mandatory = $true)]
    [string] $Region2,

    [Parameter(Mandatory = $true)]
    [string] $VMSize,

    [Parameter(Mandatory = $true)]
    [int] $Threshold
)

# Connect to Azure with system-assigned managed identity
$AzureContext = (Connect-AzAccount -Identity).Context

# Log the start of the Runbook
Write-Output "Starting the Runbook..."

# Get the availability and number of units for the VM size in Region 1
$vmSizeInfo1 = (Get-AzVMSize -Location $Region1 | Where-Object { $_.Name -eq $VMSize }).Capabilities
$availability1 = $vmSizeInfo1 | Where-Object { $_.Name -eq "AvailabilitySet" } | Select-Object -ExpandProperty Value
$numberOfUnits1 = $vmSizeInfo1 | Where-Object { $_.Name -eq "MaxResourceVolumeMB" } | Select-Object -ExpandProperty Value

# Get the availability and number of units for the VM size in Region 2
$vmSizeInfo2 = (Get-AzVMSize -Location $Region2 | Where-Object { $_.Name -eq $VMSize }).Capabilities
$availability2 = $vmSizeInfo2 | Where-Object { $_.Name -eq "AvailabilitySet" } | Select-Object -ExpandProperty Value
$numberOfUnits2 = $vmSizeInfo2 | Where-Object { $_.Name -eq "MaxResourceVolumeMB" } | Select-Object -ExpandProperty Value

# Check if the available units are less than the threshold in Region 1
if ($numberOfUnits1 -lt $Threshold) {
    $message1 = "Region 1: Available units for VM size '$VMSize' is less than the threshold ($Threshold)."
    Write-Output $message1
    # Send notification using your preferred method (e.g., email, Teams, etc.)
}

# Check if the available units are less than the threshold in Region 2
if ($numberOfUnits2 -lt $Threshold) {
    $message2 = "Region 2: Available units for VM size '$VMSize' is less than the threshold ($Threshold)."
    Write-Output $message2
    # Send notification using your preferred method (e.g., email, Teams, etc.)
}
