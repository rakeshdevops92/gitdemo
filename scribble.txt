# Ensures you do not inherit an AzContext in your runbook
Disable-AzContextAutosave -Scope Process

# Connect to Azure with system-assigned managed identity
$AzureContext = (Connect-AzAccount -Identity).context

# Set and store context
$AzureContext = Set-AzContext -SubscriptionName $AzureContext.Subscription -DefaultProfile $AzureContext

# Log the start of the Runbook
Write-Output "Starting VM Quota Limit Check Runbook..."

# Define the Resource Group and VM name
$resourceGroupName = "learning"
$vmName = "demorun"

# Define the name of the data disk and the new size in GB
$diskName = "dd1"  # Replace with the name of your data disk
$newDiskSizeGB = 64  # Replace with the new size in GB

# Get the data disk
$disk = Get-AzDisk -ResourceGroupName $resourceGroupName -DiskName $diskName

if ($disk) {
    $currentDiskSizeGB = $disk.DiskSizeGB

    Write-Output "Current Data Disk Size: $currentDiskSizeGB GB"
    Write-Output "Increasing Data Disk Size to $newDiskSizeGB GB..."

    # Resize the data disk
    $disk.DiskSizeGB = $newDiskSizeGB
    $disk | Update-AzDisk

    Write-Output "Data Disk Size increased to $newDiskSizeGB GB successfully."

    # Define the command to expand the volume
    $scriptContent = @'
    $disks = Get-Disk | Where-Object Number -gt 0
    foreach ($disk in $disks) {
        $partitions = Get-Partition -DiskNumber $disk.Number
        foreach ($partition in $partitions) {
            if ($partition.Size -lt 1GB) {
                continue
            }
            $size = (Get-PartitionSupportedSize -DiskNumber $disk.Number -PartitionNumber $partition.PartitionNumber).SizeMax
            Resize-Partition -DiskNumber $disk.Number -PartitionNumber $partition.PartitionNumber -Size $size
        }
    }
'@

    # Execute the command on the VM
    Invoke-AzVMRunCommand -ResourceGroupName $resourceGroupName -Name $vmName -CommandId 'RunPowerShellScript' -ScriptString $scriptContent

} else {
    Write-Output "Data Disk not found or not attached to the VM."
}
