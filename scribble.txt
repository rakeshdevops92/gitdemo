trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Update these variables
  terraformWorkingDirectory: '$(Build.SourcesDirectory)/terraform'
  backendStorageAccountName: '<Your Storage Account Name>'
  backendContainerName: '<Your Storage Container Name>'
  backendKey: '<Your Terraform State File Name>'
  serviceConnection: '<Your Azure Service Connection Name>'

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '1.0.0'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(terraformWorkingDirectory)'
    backendServiceArm: '$(serviceConnection)'
    backendAzureRmResourceGroupName: '<Your Resource Group Name>'
    backendAzureRmStorageAccountName: '$(backendStorageAccountName)'
    backendAzureRmContainerName: '$(backendContainerName)'
    backendAzureRmKey: '$(backendKey)'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: '$(terraformWorkingDirectory)'
    
- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(terraformWorkingDirectory)'
    environmentServiceNameAzureRM: '$(serviceConnection)'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(terraformWorkingDirectory)'
    environmentServiceNameAzureRM: '$(serviceConnection)'
    commandOptions: '-auto-approve'
