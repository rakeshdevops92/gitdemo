trigger:
- main

parameters:
- name: env
  displayName: Environment
  type: string
  values:
    - dev
    - test
    - plab
    - prod

- name: region
  displayName: Region
  type: string
  values:
    - eastus2
    - westus2

- name: label
  displayName: Label Selector
  type: string
  default: 'Voltage=true'

pool:
  name: 25366-CricketOnline-DevOps-AgentPool

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: '25366-CricketOnline'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Install kubelogin
      VERSION=$(curl --silent "https://api.github.com/repos/Azure/kubelogin/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
      wget https://github.com/Azure/kubelogin/releases/download/$VERSION/kubelogin-linux-amd64.zip
      unzip kubelogin-linux-amd64.zip
      sudo mv bin/linux_amd64/kubelogin /usr/local/bin/

      # Define the environment and region parameters
      env="${{ parameters.env }}"
      region="${{ parameters.region }}"
      label="${{ parameters.label }}"

      # Select resource group and cluster name based on the environment and region parameters
      if [[ $env == "dev" ]]; then
        if [[ $region == "eastus2" ]]; then
          resourceGroup="25366-eastus2-nprd-dev-rg"
          clusterName="ck-25366-eastus2-nprd-dev-aks"
        elif [[ $region == "westus2" ]]; then
          resourceGroup="25366-westus2-nprd-dev-rg"
          clusterName="ck-25366-westus2-nprd-dev-aks"
        fi
      elif [[ $env == "test" ]]; then
        if [[ $region == "eastus2" ]]; then
          resourceGroup="25366-eastus2-nprd-test-rg"
          clusterName="ck-25366-eastus2-nprd-test-aks"
        elif [[ $region == "westus2" ]]; then
          resourceGroup="25366-westus2-nprd-test-rg"
          clusterName="ck-25366-westus2-nprd-test-aks"
        fi
      elif [[ $env == "plab" ]]; then
        if [[ $region == "eastus2" ]]; then
          resourceGroup="25366-eastus2-nprd-plab-rg"
          clusterName="ck-25366-eastus2-nprd-plab-aks"
        elif [[ $region == "westus2" ]]; then
          resourceGroup="25366-westus2-nprd-plab-rg"
          clusterName="ck-25366-westus2-nprd-plab-aks"
        fi
      elif [[ $env == "prod" ]]; then
        if [[ $region == "eastus2" ]]; then
          resourceGroup="25366-eastus2-nprd-prod-rg"
          clusterName="ck-25366-eastus2-nprd-prod-aks"
        elif [[ $region == "westus2" ]]; then
          resourceGroup="25366-westus2-nprd-prod-rg"
          clusterName="ck-25366-westus2-nprd-prod-aks"
        fi
      else
        echo "Invalid environment or region specified."
        exit 1
      fi

      echo "Selected Resource Group: $resourceGroup"
      echo "Selected Cluster Name: $clusterName"

      # Get the credentials for the AKS cluster using selected resource group and cluster name
      az aks get-credentials --resource-group $resourceGroup --name $clusterName
      
      # Get the list of deployments with the specified label
      DEPLOYMENTS=$(kubectl get deployments -n cwdigital-test -l $label -o jsonpath='{.items[*].metadata.name}')
      
      # Loop through the deployments and restart (bounce) each one
      for DEPLOYMENT in $DEPLOYMENTS; do
        echo "Restarting $DEPLOYMENT"
        kubectl rollout restart deployment/$DEPLOYMENT -n cwdigital-test        
      done
