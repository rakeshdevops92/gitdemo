# Define Variables
$token = "your-personal-access-token" # Replace with your GitHub Personal Access Token
$sourceOwner = "source-owner-name" # Replace with the source owner name
$sourceRepo = "source-repo-name" # Replace with the source repository name
$sourceBranch = "source-branch-name" # Replace with the source branch name

$destinationOwner = "destination-owner-name" # Replace with the destination owner name
$destinationRepo = "destination-repo-name" # Replace with the destination repository name
$destinationBranch = "destination-branch-name" # Replace with the destination branch name

# Define Headers
$headers = @{
    "Authorization" = "Bearer $token"
    "Accept" = "application/vnd.github.v3+json"
    "X-GitHub-Api-Version" = "2022-11-28"
}

# API URL for getting branch protection from the source
$apiUrlSource = "https://github.azc.ext.hp.com/api/v3/repos/$sourceOwner/$sourceRepo/branches/$sourceBranch/protection"

# Retrieve branch protection from the source
try {
    $sourceProtectionRules = Invoke-RestMethod -Uri $apiUrlSource -Method Get -Headers $headers
    Write-Output "Retrieved branch protection rules from $sourceBranch"
}
catch {
    Write-Error "Failed to retrieve branch protection rules from $sourceBranch: $_"
    exit
}

# API URL for updating branch protection on the destination
$apiUrlDestination = "https://github.azc.ext.hp.com/api/v3/repos/$destinationOwner/$destinationRepo/branches/$destinationBranch/protection"

# Prepare the payload for the destination branch (may require transformation depending on the API version and rules)
$protectionPayload = $sourceProtectionRules | ConvertTo-Json

# Apply protection rules to the destination branch
try {
    $response = Invoke-RestMethod -Uri $apiUrlDestination -Method Put -Headers $headers -Body $protectionPayload -ContentType "application/json"
    Write-Output "Applied branch protection rules to $destinationBranch in $destinationRepo"
}
catch {
    Write-Error "Failed to apply branch protection rules to $destinationBranch in $destinationRepo: $_"
}
